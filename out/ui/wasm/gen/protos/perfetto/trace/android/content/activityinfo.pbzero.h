// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_CONTENT_ACTIVITYINFO_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_CONTENT_ACTIVITYINFO_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"


namespace perfetto {
namespace protos {
namespace pbzero {

namespace perfetto_pbzero_enum_ActivityInfoProto {
enum ScreenOrientation : int32_t {
  SCREEN_ORIENTATION_UNSET = -2,
  SCREEN_ORIENTATION_UNSPECIFIED = -1,
  SCREEN_ORIENTATION_LANDSCAPE = 0,
  SCREEN_ORIENTATION_PORTRAIT = 1,
  SCREEN_ORIENTATION_USER = 2,
  SCREEN_ORIENTATION_BEHIND = 3,
  SCREEN_ORIENTATION_SENSOR = 4,
  SCREEN_ORIENTATION_NOSENSOR = 5,
  SCREEN_ORIENTATION_SENSOR_LANDSCAPE = 6,
  SCREEN_ORIENTATION_SENSOR_PORTRAIT = 7,
  SCREEN_ORIENTATION_REVERSE_LANDSCAPE = 8,
  SCREEN_ORIENTATION_REVERSE_PORTRAIT = 9,
  SCREEN_ORIENTATION_FULL_SENSOR = 10,
  SCREEN_ORIENTATION_USER_LANDSCAPE = 11,
  SCREEN_ORIENTATION_USER_PORTRAIT = 12,
  SCREEN_ORIENTATION_FULL_USER = 13,
  SCREEN_ORIENTATION_LOCKED = 14,
};
} // namespace perfetto_pbzero_enum_ActivityInfoProto
using ActivityInfoProto_ScreenOrientation = perfetto_pbzero_enum_ActivityInfoProto::ScreenOrientation;


constexpr ActivityInfoProto_ScreenOrientation ActivityInfoProto_ScreenOrientation_MIN = ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_UNSET;
constexpr ActivityInfoProto_ScreenOrientation ActivityInfoProto_ScreenOrientation_MAX = ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_LOCKED;


PERFETTO_PROTOZERO_CONSTEXPR14_OR_INLINE
const char* ActivityInfoProto_ScreenOrientation_Name(::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation value) {
  switch (value) {
  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_UNSET:
    return "SCREEN_ORIENTATION_UNSET";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_UNSPECIFIED:
    return "SCREEN_ORIENTATION_UNSPECIFIED";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_LANDSCAPE:
    return "SCREEN_ORIENTATION_LANDSCAPE";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_PORTRAIT:
    return "SCREEN_ORIENTATION_PORTRAIT";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_USER:
    return "SCREEN_ORIENTATION_USER";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_BEHIND:
    return "SCREEN_ORIENTATION_BEHIND";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_SENSOR:
    return "SCREEN_ORIENTATION_SENSOR";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_NOSENSOR:
    return "SCREEN_ORIENTATION_NOSENSOR";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_SENSOR_LANDSCAPE:
    return "SCREEN_ORIENTATION_SENSOR_LANDSCAPE";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_SENSOR_PORTRAIT:
    return "SCREEN_ORIENTATION_SENSOR_PORTRAIT";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_REVERSE_LANDSCAPE:
    return "SCREEN_ORIENTATION_REVERSE_LANDSCAPE";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_REVERSE_PORTRAIT:
    return "SCREEN_ORIENTATION_REVERSE_PORTRAIT";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_FULL_SENSOR:
    return "SCREEN_ORIENTATION_FULL_SENSOR";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_USER_LANDSCAPE:
    return "SCREEN_ORIENTATION_USER_LANDSCAPE";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_USER_PORTRAIT:
    return "SCREEN_ORIENTATION_USER_PORTRAIT";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_FULL_USER:
    return "SCREEN_ORIENTATION_FULL_USER";

  case ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation::SCREEN_ORIENTATION_LOCKED:
    return "SCREEN_ORIENTATION_LOCKED";
  }
  return "PBZERO_UNKNOWN_ENUM_VALUE";
}

class ActivityInfoProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/0, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  ActivityInfoProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit ActivityInfoProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit ActivityInfoProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
};

class ActivityInfoProto : public ::protozero::Message {
 public:
  using Decoder = ActivityInfoProto_Decoder;
  static constexpr const char* GetName() { return ".perfetto.protos.ActivityInfoProto"; }


  using ScreenOrientation = ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation;
  static inline const char* ScreenOrientation_Name(ScreenOrientation value) {
    return ::perfetto::protos::pbzero::ActivityInfoProto_ScreenOrientation_Name(value);
  }
  static inline const ScreenOrientation SCREEN_ORIENTATION_UNSET = ScreenOrientation::SCREEN_ORIENTATION_UNSET;
  static inline const ScreenOrientation SCREEN_ORIENTATION_UNSPECIFIED = ScreenOrientation::SCREEN_ORIENTATION_UNSPECIFIED;
  static inline const ScreenOrientation SCREEN_ORIENTATION_LANDSCAPE = ScreenOrientation::SCREEN_ORIENTATION_LANDSCAPE;
  static inline const ScreenOrientation SCREEN_ORIENTATION_PORTRAIT = ScreenOrientation::SCREEN_ORIENTATION_PORTRAIT;
  static inline const ScreenOrientation SCREEN_ORIENTATION_USER = ScreenOrientation::SCREEN_ORIENTATION_USER;
  static inline const ScreenOrientation SCREEN_ORIENTATION_BEHIND = ScreenOrientation::SCREEN_ORIENTATION_BEHIND;
  static inline const ScreenOrientation SCREEN_ORIENTATION_SENSOR = ScreenOrientation::SCREEN_ORIENTATION_SENSOR;
  static inline const ScreenOrientation SCREEN_ORIENTATION_NOSENSOR = ScreenOrientation::SCREEN_ORIENTATION_NOSENSOR;
  static inline const ScreenOrientation SCREEN_ORIENTATION_SENSOR_LANDSCAPE = ScreenOrientation::SCREEN_ORIENTATION_SENSOR_LANDSCAPE;
  static inline const ScreenOrientation SCREEN_ORIENTATION_SENSOR_PORTRAIT = ScreenOrientation::SCREEN_ORIENTATION_SENSOR_PORTRAIT;
  static inline const ScreenOrientation SCREEN_ORIENTATION_REVERSE_LANDSCAPE = ScreenOrientation::SCREEN_ORIENTATION_REVERSE_LANDSCAPE;
  static inline const ScreenOrientation SCREEN_ORIENTATION_REVERSE_PORTRAIT = ScreenOrientation::SCREEN_ORIENTATION_REVERSE_PORTRAIT;
  static inline const ScreenOrientation SCREEN_ORIENTATION_FULL_SENSOR = ScreenOrientation::SCREEN_ORIENTATION_FULL_SENSOR;
  static inline const ScreenOrientation SCREEN_ORIENTATION_USER_LANDSCAPE = ScreenOrientation::SCREEN_ORIENTATION_USER_LANDSCAPE;
  static inline const ScreenOrientation SCREEN_ORIENTATION_USER_PORTRAIT = ScreenOrientation::SCREEN_ORIENTATION_USER_PORTRAIT;
  static inline const ScreenOrientation SCREEN_ORIENTATION_FULL_USER = ScreenOrientation::SCREEN_ORIENTATION_FULL_USER;
  static inline const ScreenOrientation SCREEN_ORIENTATION_LOCKED = ScreenOrientation::SCREEN_ORIENTATION_LOCKED;
};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
