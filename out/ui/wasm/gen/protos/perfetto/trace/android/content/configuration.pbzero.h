// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_CONTENT_CONFIGURATION_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_CONTENT_CONFIGURATION_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"

namespace perfetto {
namespace protos {
namespace pbzero {
class ConfigurationProto;
class DeviceConfigurationProto;
class LocaleProto;
class ResourcesConfigurationProto;
class WindowConfigurationProto;
} // Namespace pbzero.
} // Namespace protos.
} // Namespace perfetto.

namespace perfetto {
namespace protos {
namespace pbzero {

class GlobalConfigurationProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/2, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  GlobalConfigurationProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit GlobalConfigurationProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit GlobalConfigurationProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_resources() const { return at<1>().valid(); }
  ::protozero::ConstBytes resources() const { return at<1>().as_bytes(); }
  bool has_device() const { return at<2>().valid(); }
  ::protozero::ConstBytes device() const { return at<2>().as_bytes(); }
};

class GlobalConfigurationProto : public ::protozero::Message {
 public:
  using Decoder = GlobalConfigurationProto_Decoder;
  enum : int32_t {
    kResourcesFieldNumber = 1,
    kDeviceFieldNumber = 2,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.GlobalConfigurationProto"; }


  using FieldMetadata_Resources =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      ResourcesConfigurationProto,
      GlobalConfigurationProto>;

  static constexpr FieldMetadata_Resources kResources{};
  template <typename T = ResourcesConfigurationProto> T* set_resources() {
    return BeginNestedMessage<T>(1);
  }


  using FieldMetadata_Device =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      DeviceConfigurationProto,
      GlobalConfigurationProto>;

  static constexpr FieldMetadata_Device kDevice{};
  template <typename T = DeviceConfigurationProto> T* set_device() {
    return BeginNestedMessage<T>(2);
  }

};

class DeviceConfigurationProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/12, /*HAS_NONPACKED_REPEATED_FIELDS=*/true> {
 public:
  DeviceConfigurationProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit DeviceConfigurationProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit DeviceConfigurationProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_stable_screen_width_px() const { return at<1>().valid(); }
  uint32_t stable_screen_width_px() const { return at<1>().as_uint32(); }
  bool has_stable_screen_height_px() const { return at<2>().valid(); }
  uint32_t stable_screen_height_px() const { return at<2>().as_uint32(); }
  bool has_stable_density_dpi() const { return at<3>().valid(); }
  uint32_t stable_density_dpi() const { return at<3>().as_uint32(); }
  bool has_total_ram() const { return at<4>().valid(); }
  uint64_t total_ram() const { return at<4>().as_uint64(); }
  bool has_low_ram() const { return at<5>().valid(); }
  bool low_ram() const { return at<5>().as_bool(); }
  bool has_max_cores() const { return at<6>().valid(); }
  uint32_t max_cores() const { return at<6>().as_uint32(); }
  bool has_has_secure_screen_lock() const { return at<7>().valid(); }
  bool has_secure_screen_lock() const { return at<7>().as_bool(); }
  bool has_opengl_version() const { return at<8>().valid(); }
  uint32_t opengl_version() const { return at<8>().as_uint32(); }
  bool has_opengl_extensions() const { return at<9>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstChars> opengl_extensions() const { return GetRepeated<::protozero::ConstChars>(9); }
  bool has_shared_libraries() const { return at<10>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstChars> shared_libraries() const { return GetRepeated<::protozero::ConstChars>(10); }
  bool has_features() const { return at<11>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstChars> features() const { return GetRepeated<::protozero::ConstChars>(11); }
  bool has_cpu_architectures() const { return at<12>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstChars> cpu_architectures() const { return GetRepeated<::protozero::ConstChars>(12); }
};

class DeviceConfigurationProto : public ::protozero::Message {
 public:
  using Decoder = DeviceConfigurationProto_Decoder;
  enum : int32_t {
    kStableScreenWidthPxFieldNumber = 1,
    kStableScreenHeightPxFieldNumber = 2,
    kStableDensityDpiFieldNumber = 3,
    kTotalRamFieldNumber = 4,
    kLowRamFieldNumber = 5,
    kMaxCoresFieldNumber = 6,
    kHasSecureScreenLockFieldNumber = 7,
    kOpenglVersionFieldNumber = 8,
    kOpenglExtensionsFieldNumber = 9,
    kSharedLibrariesFieldNumber = 10,
    kFeaturesFieldNumber = 11,
    kCpuArchitecturesFieldNumber = 12,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.DeviceConfigurationProto"; }


  using FieldMetadata_StableScreenWidthPx =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_StableScreenWidthPx kStableScreenWidthPx{};
  void set_stable_screen_width_px(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_StableScreenWidthPx::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_StableScreenHeightPx =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_StableScreenHeightPx kStableScreenHeightPx{};
  void set_stable_screen_height_px(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_StableScreenHeightPx::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_StableDensityDpi =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_StableDensityDpi kStableDensityDpi{};
  void set_stable_density_dpi(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_StableDensityDpi::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_TotalRam =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint64,
      uint64_t,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_TotalRam kTotalRam{};
  void set_total_ram(uint64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_TotalRam::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint64>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_LowRam =
    ::protozero::proto_utils::FieldMetadata<
      5,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kBool,
      bool,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_LowRam kLowRam{};
  void set_low_ram(bool value) {
    static constexpr uint32_t field_id = FieldMetadata_LowRam::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kBool>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_MaxCores =
    ::protozero::proto_utils::FieldMetadata<
      6,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_MaxCores kMaxCores{};
  void set_max_cores(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_MaxCores::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_HasSecureScreenLock =
    ::protozero::proto_utils::FieldMetadata<
      7,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kBool,
      bool,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_HasSecureScreenLock kHasSecureScreenLock{};
  void set_has_secure_screen_lock(bool value) {
    static constexpr uint32_t field_id = FieldMetadata_HasSecureScreenLock::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kBool>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_OpenglVersion =
    ::protozero::proto_utils::FieldMetadata<
      8,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_OpenglVersion kOpenglVersion{};
  void set_opengl_version(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_OpenglVersion::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_OpenglExtensions =
    ::protozero::proto_utils::FieldMetadata<
      9,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kString,
      std::string,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_OpenglExtensions kOpenglExtensions{};
  void add_opengl_extensions(const char* data, size_t size) {
    AppendBytes(FieldMetadata_OpenglExtensions::kFieldId, data, size);
  }
  void add_opengl_extensions(::protozero::ConstChars chars) {
    AppendBytes(FieldMetadata_OpenglExtensions::kFieldId, chars.data, chars.size);
  }
  void add_opengl_extensions(std::string value) {
    static constexpr uint32_t field_id = FieldMetadata_OpenglExtensions::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kString>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_SharedLibraries =
    ::protozero::proto_utils::FieldMetadata<
      10,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kString,
      std::string,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_SharedLibraries kSharedLibraries{};
  void add_shared_libraries(const char* data, size_t size) {
    AppendBytes(FieldMetadata_SharedLibraries::kFieldId, data, size);
  }
  void add_shared_libraries(::protozero::ConstChars chars) {
    AppendBytes(FieldMetadata_SharedLibraries::kFieldId, chars.data, chars.size);
  }
  void add_shared_libraries(std::string value) {
    static constexpr uint32_t field_id = FieldMetadata_SharedLibraries::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kString>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Features =
    ::protozero::proto_utils::FieldMetadata<
      11,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kString,
      std::string,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_Features kFeatures{};
  void add_features(const char* data, size_t size) {
    AppendBytes(FieldMetadata_Features::kFieldId, data, size);
  }
  void add_features(::protozero::ConstChars chars) {
    AppendBytes(FieldMetadata_Features::kFieldId, chars.data, chars.size);
  }
  void add_features(std::string value) {
    static constexpr uint32_t field_id = FieldMetadata_Features::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kString>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_CpuArchitectures =
    ::protozero::proto_utils::FieldMetadata<
      12,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kString,
      std::string,
      DeviceConfigurationProto>;

  static constexpr FieldMetadata_CpuArchitectures kCpuArchitectures{};
  void add_cpu_architectures(const char* data, size_t size) {
    AppendBytes(FieldMetadata_CpuArchitectures::kFieldId, data, size);
  }
  void add_cpu_architectures(::protozero::ConstChars chars) {
    AppendBytes(FieldMetadata_CpuArchitectures::kFieldId, chars.data, chars.size);
  }
  void add_cpu_architectures(std::string value) {
    static constexpr uint32_t field_id = FieldMetadata_CpuArchitectures::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kString>
        ::Append(*this, field_id, value);
  }
};

class ResourcesConfigurationProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/4, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  ResourcesConfigurationProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit ResourcesConfigurationProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit ResourcesConfigurationProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_configuration() const { return at<1>().valid(); }
  ::protozero::ConstBytes configuration() const { return at<1>().as_bytes(); }
  bool has_sdk_version() const { return at<2>().valid(); }
  uint32_t sdk_version() const { return at<2>().as_uint32(); }
  bool has_screen_width_px() const { return at<3>().valid(); }
  uint32_t screen_width_px() const { return at<3>().as_uint32(); }
  bool has_screen_height_px() const { return at<4>().valid(); }
  uint32_t screen_height_px() const { return at<4>().as_uint32(); }
};

class ResourcesConfigurationProto : public ::protozero::Message {
 public:
  using Decoder = ResourcesConfigurationProto_Decoder;
  enum : int32_t {
    kConfigurationFieldNumber = 1,
    kSdkVersionFieldNumber = 2,
    kScreenWidthPxFieldNumber = 3,
    kScreenHeightPxFieldNumber = 4,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.ResourcesConfigurationProto"; }


  using FieldMetadata_Configuration =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      ConfigurationProto,
      ResourcesConfigurationProto>;

  static constexpr FieldMetadata_Configuration kConfiguration{};
  template <typename T = ConfigurationProto> T* set_configuration() {
    return BeginNestedMessage<T>(1);
  }


  using FieldMetadata_SdkVersion =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ResourcesConfigurationProto>;

  static constexpr FieldMetadata_SdkVersion kSdkVersion{};
  void set_sdk_version(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_SdkVersion::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ScreenWidthPx =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ResourcesConfigurationProto>;

  static constexpr FieldMetadata_ScreenWidthPx kScreenWidthPx{};
  void set_screen_width_px(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ScreenWidthPx::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ScreenHeightPx =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ResourcesConfigurationProto>;

  static constexpr FieldMetadata_ScreenHeightPx kScreenHeightPx{};
  void set_screen_height_px(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ScreenHeightPx::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }
};

class ConfigurationProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/22, /*HAS_NONPACKED_REPEATED_FIELDS=*/true> {
 public:
  ConfigurationProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit ConfigurationProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit ConfigurationProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_font_scale() const { return at<1>().valid(); }
  float font_scale() const { return at<1>().as_float(); }
  bool has_mcc() const { return at<2>().valid(); }
  uint32_t mcc() const { return at<2>().as_uint32(); }
  bool has_mnc() const { return at<3>().valid(); }
  uint32_t mnc() const { return at<3>().as_uint32(); }
  bool has_locales() const { return at<4>().valid(); }
  ::protozero::RepeatedFieldIterator<::protozero::ConstBytes> locales() const { return GetRepeated<::protozero::ConstBytes>(4); }
  bool has_screen_layout() const { return at<5>().valid(); }
  uint32_t screen_layout() const { return at<5>().as_uint32(); }
  bool has_color_mode() const { return at<6>().valid(); }
  uint32_t color_mode() const { return at<6>().as_uint32(); }
  bool has_touchscreen() const { return at<7>().valid(); }
  uint32_t touchscreen() const { return at<7>().as_uint32(); }
  bool has_keyboard() const { return at<8>().valid(); }
  uint32_t keyboard() const { return at<8>().as_uint32(); }
  bool has_keyboard_hidden() const { return at<9>().valid(); }
  uint32_t keyboard_hidden() const { return at<9>().as_uint32(); }
  bool has_hard_keyboard_hidden() const { return at<10>().valid(); }
  uint32_t hard_keyboard_hidden() const { return at<10>().as_uint32(); }
  bool has_navigation() const { return at<11>().valid(); }
  uint32_t navigation() const { return at<11>().as_uint32(); }
  bool has_navigation_hidden() const { return at<12>().valid(); }
  uint32_t navigation_hidden() const { return at<12>().as_uint32(); }
  bool has_orientation() const { return at<13>().valid(); }
  uint32_t orientation() const { return at<13>().as_uint32(); }
  bool has_ui_mode() const { return at<14>().valid(); }
  uint32_t ui_mode() const { return at<14>().as_uint32(); }
  bool has_screen_width_dp() const { return at<15>().valid(); }
  uint32_t screen_width_dp() const { return at<15>().as_uint32(); }
  bool has_screen_height_dp() const { return at<16>().valid(); }
  uint32_t screen_height_dp() const { return at<16>().as_uint32(); }
  bool has_smallest_screen_width_dp() const { return at<17>().valid(); }
  uint32_t smallest_screen_width_dp() const { return at<17>().as_uint32(); }
  bool has_density_dpi() const { return at<18>().valid(); }
  uint32_t density_dpi() const { return at<18>().as_uint32(); }
  bool has_window_configuration() const { return at<19>().valid(); }
  ::protozero::ConstBytes window_configuration() const { return at<19>().as_bytes(); }
  bool has_locale_list() const { return at<20>().valid(); }
  ::protozero::ConstChars locale_list() const { return at<20>().as_string(); }
  bool has_font_weight_adjustment() const { return at<21>().valid(); }
  uint32_t font_weight_adjustment() const { return at<21>().as_uint32(); }
  bool has_grammatical_gender() const { return at<22>().valid(); }
  uint32_t grammatical_gender() const { return at<22>().as_uint32(); }
};

class ConfigurationProto : public ::protozero::Message {
 public:
  using Decoder = ConfigurationProto_Decoder;
  enum : int32_t {
    kFontScaleFieldNumber = 1,
    kMccFieldNumber = 2,
    kMncFieldNumber = 3,
    kLocalesFieldNumber = 4,
    kScreenLayoutFieldNumber = 5,
    kColorModeFieldNumber = 6,
    kTouchscreenFieldNumber = 7,
    kKeyboardFieldNumber = 8,
    kKeyboardHiddenFieldNumber = 9,
    kHardKeyboardHiddenFieldNumber = 10,
    kNavigationFieldNumber = 11,
    kNavigationHiddenFieldNumber = 12,
    kOrientationFieldNumber = 13,
    kUiModeFieldNumber = 14,
    kScreenWidthDpFieldNumber = 15,
    kScreenHeightDpFieldNumber = 16,
    kSmallestScreenWidthDpFieldNumber = 17,
    kDensityDpiFieldNumber = 18,
    kWindowConfigurationFieldNumber = 19,
    kLocaleListFieldNumber = 20,
    kFontWeightAdjustmentFieldNumber = 21,
    kGrammaticalGenderFieldNumber = 22,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.ConfigurationProto"; }


  using FieldMetadata_FontScale =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kFloat,
      float,
      ConfigurationProto>;

  static constexpr FieldMetadata_FontScale kFontScale{};
  void set_font_scale(float value) {
    static constexpr uint32_t field_id = FieldMetadata_FontScale::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kFloat>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Mcc =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_Mcc kMcc{};
  void set_mcc(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Mcc::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Mnc =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_Mnc kMnc{};
  void set_mnc(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Mnc::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Locales =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kRepeatedNotPacked,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      LocaleProto,
      ConfigurationProto>;

  static constexpr FieldMetadata_Locales kLocales{};
  template <typename T = LocaleProto> T* add_locales() {
    return BeginNestedMessage<T>(4);
  }


  using FieldMetadata_ScreenLayout =
    ::protozero::proto_utils::FieldMetadata<
      5,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_ScreenLayout kScreenLayout{};
  void set_screen_layout(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ScreenLayout::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ColorMode =
    ::protozero::proto_utils::FieldMetadata<
      6,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_ColorMode kColorMode{};
  void set_color_mode(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ColorMode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Touchscreen =
    ::protozero::proto_utils::FieldMetadata<
      7,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_Touchscreen kTouchscreen{};
  void set_touchscreen(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Touchscreen::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Keyboard =
    ::protozero::proto_utils::FieldMetadata<
      8,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_Keyboard kKeyboard{};
  void set_keyboard(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Keyboard::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_KeyboardHidden =
    ::protozero::proto_utils::FieldMetadata<
      9,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_KeyboardHidden kKeyboardHidden{};
  void set_keyboard_hidden(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_KeyboardHidden::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_HardKeyboardHidden =
    ::protozero::proto_utils::FieldMetadata<
      10,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_HardKeyboardHidden kHardKeyboardHidden{};
  void set_hard_keyboard_hidden(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_HardKeyboardHidden::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Navigation =
    ::protozero::proto_utils::FieldMetadata<
      11,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_Navigation kNavigation{};
  void set_navigation(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Navigation::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_NavigationHidden =
    ::protozero::proto_utils::FieldMetadata<
      12,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_NavigationHidden kNavigationHidden{};
  void set_navigation_hidden(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_NavigationHidden::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Orientation =
    ::protozero::proto_utils::FieldMetadata<
      13,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_Orientation kOrientation{};
  void set_orientation(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Orientation::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_UiMode =
    ::protozero::proto_utils::FieldMetadata<
      14,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_UiMode kUiMode{};
  void set_ui_mode(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_UiMode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ScreenWidthDp =
    ::protozero::proto_utils::FieldMetadata<
      15,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_ScreenWidthDp kScreenWidthDp{};
  void set_screen_width_dp(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ScreenWidthDp::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ScreenHeightDp =
    ::protozero::proto_utils::FieldMetadata<
      16,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_ScreenHeightDp kScreenHeightDp{};
  void set_screen_height_dp(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ScreenHeightDp::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_SmallestScreenWidthDp =
    ::protozero::proto_utils::FieldMetadata<
      17,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_SmallestScreenWidthDp kSmallestScreenWidthDp{};
  void set_smallest_screen_width_dp(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_SmallestScreenWidthDp::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_DensityDpi =
    ::protozero::proto_utils::FieldMetadata<
      18,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_DensityDpi kDensityDpi{};
  void set_density_dpi(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DensityDpi::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_WindowConfiguration =
    ::protozero::proto_utils::FieldMetadata<
      19,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kMessage,
      WindowConfigurationProto,
      ConfigurationProto>;

  static constexpr FieldMetadata_WindowConfiguration kWindowConfiguration{};
  template <typename T = WindowConfigurationProto> T* set_window_configuration() {
    return BeginNestedMessage<T>(19);
  }


  using FieldMetadata_LocaleList =
    ::protozero::proto_utils::FieldMetadata<
      20,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kString,
      std::string,
      ConfigurationProto>;

  static constexpr FieldMetadata_LocaleList kLocaleList{};
  void set_locale_list(const char* data, size_t size) {
    AppendBytes(FieldMetadata_LocaleList::kFieldId, data, size);
  }
  void set_locale_list(::protozero::ConstChars chars) {
    AppendBytes(FieldMetadata_LocaleList::kFieldId, chars.data, chars.size);
  }
  void set_locale_list(std::string value) {
    static constexpr uint32_t field_id = FieldMetadata_LocaleList::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kString>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_FontWeightAdjustment =
    ::protozero::proto_utils::FieldMetadata<
      21,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_FontWeightAdjustment kFontWeightAdjustment{};
  void set_font_weight_adjustment(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_FontWeightAdjustment::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_GrammaticalGender =
    ::protozero::proto_utils::FieldMetadata<
      22,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      ConfigurationProto>;

  static constexpr FieldMetadata_GrammaticalGender kGrammaticalGender{};
  void set_grammatical_gender(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_GrammaticalGender::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }
};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
