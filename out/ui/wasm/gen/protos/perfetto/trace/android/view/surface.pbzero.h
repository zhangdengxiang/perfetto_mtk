// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_SURFACE_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_VIEW_SURFACE_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"


namespace perfetto {
namespace protos {
namespace pbzero {

namespace perfetto_pbzero_enum_SurfaceProto {
enum Rotation : int32_t {
  ROTATION_0 = 0,
  ROTATION_90 = 1,
  ROTATION_180 = 2,
  ROTATION_270 = 3,
};
} // namespace perfetto_pbzero_enum_SurfaceProto
using SurfaceProto_Rotation = perfetto_pbzero_enum_SurfaceProto::Rotation;


constexpr SurfaceProto_Rotation SurfaceProto_Rotation_MIN = SurfaceProto_Rotation::ROTATION_0;
constexpr SurfaceProto_Rotation SurfaceProto_Rotation_MAX = SurfaceProto_Rotation::ROTATION_270;


PERFETTO_PROTOZERO_CONSTEXPR14_OR_INLINE
const char* SurfaceProto_Rotation_Name(::perfetto::protos::pbzero::SurfaceProto_Rotation value) {
  switch (value) {
  case ::perfetto::protos::pbzero::SurfaceProto_Rotation::ROTATION_0:
    return "ROTATION_0";

  case ::perfetto::protos::pbzero::SurfaceProto_Rotation::ROTATION_90:
    return "ROTATION_90";

  case ::perfetto::protos::pbzero::SurfaceProto_Rotation::ROTATION_180:
    return "ROTATION_180";

  case ::perfetto::protos::pbzero::SurfaceProto_Rotation::ROTATION_270:
    return "ROTATION_270";
  }
  return "PBZERO_UNKNOWN_ENUM_VALUE";
}

class SurfaceProto_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/0, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  SurfaceProto_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit SurfaceProto_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit SurfaceProto_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
};

class SurfaceProto : public ::protozero::Message {
 public:
  using Decoder = SurfaceProto_Decoder;
  static constexpr const char* GetName() { return ".perfetto.protos.SurfaceProto"; }


  using Rotation = ::perfetto::protos::pbzero::SurfaceProto_Rotation;
  static inline const char* Rotation_Name(Rotation value) {
    return ::perfetto::protos::pbzero::SurfaceProto_Rotation_Name(value);
  }
  static inline const Rotation ROTATION_0 = Rotation::ROTATION_0;
  static inline const Rotation ROTATION_90 = Rotation::ROTATION_90;
  static inline const Rotation ROTATION_180 = Rotation::ROTATION_180;
  static inline const Rotation ROTATION_270 = Rotation::ROTATION_270;
};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
