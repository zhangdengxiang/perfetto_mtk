// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_FTRACE_PIXEL_MM_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_FTRACE_PIXEL_MM_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"


namespace perfetto {
namespace protos {
namespace pbzero {

class PixelMmKswapdDoneFtraceEvent_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/2, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  PixelMmKswapdDoneFtraceEvent_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit PixelMmKswapdDoneFtraceEvent_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit PixelMmKswapdDoneFtraceEvent_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_delta_nr_scanned() const { return at<1>().valid(); }
  uint64_t delta_nr_scanned() const { return at<1>().as_uint64(); }
  bool has_delta_nr_reclaimed() const { return at<2>().valid(); }
  uint64_t delta_nr_reclaimed() const { return at<2>().as_uint64(); }
};

class PixelMmKswapdDoneFtraceEvent : public ::protozero::Message {
 public:
  using Decoder = PixelMmKswapdDoneFtraceEvent_Decoder;
  enum : int32_t {
    kDeltaNrScannedFieldNumber = 1,
    kDeltaNrReclaimedFieldNumber = 2,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.PixelMmKswapdDoneFtraceEvent"; }


  using FieldMetadata_DeltaNrScanned =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint64,
      uint64_t,
      PixelMmKswapdDoneFtraceEvent>;

  static constexpr FieldMetadata_DeltaNrScanned kDeltaNrScanned{};
  void set_delta_nr_scanned(uint64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DeltaNrScanned::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint64>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_DeltaNrReclaimed =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint64,
      uint64_t,
      PixelMmKswapdDoneFtraceEvent>;

  static constexpr FieldMetadata_DeltaNrReclaimed kDeltaNrReclaimed{};
  void set_delta_nr_reclaimed(uint64_t value) {
    static constexpr uint32_t field_id = FieldMetadata_DeltaNrReclaimed::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint64>
        ::Append(*this, field_id, value);
  }
};

class PixelMmKswapdWakeFtraceEvent_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/1, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  PixelMmKswapdWakeFtraceEvent_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit PixelMmKswapdWakeFtraceEvent_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit PixelMmKswapdWakeFtraceEvent_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_whatever() const { return at<1>().valid(); }
  int32_t whatever() const { return at<1>().as_int32(); }
};

class PixelMmKswapdWakeFtraceEvent : public ::protozero::Message {
 public:
  using Decoder = PixelMmKswapdWakeFtraceEvent_Decoder;
  enum : int32_t {
    kWhateverFieldNumber = 1,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.PixelMmKswapdWakeFtraceEvent"; }


  using FieldMetadata_Whatever =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kInt32,
      int32_t,
      PixelMmKswapdWakeFtraceEvent>;

  static constexpr FieldMetadata_Whatever kWhatever{};
  void set_whatever(int32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Whatever::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kInt32>
        ::Append(*this, field_id, value);
  }
};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
